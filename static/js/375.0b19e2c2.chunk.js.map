{"version":3,"file":"static/js/375.0b19e2c2.chunk.js","mappings":"mRAEAA,EAAAA,GAAAA,SAAAA,QAAyB,8BACzB,IAAMC,EAAM,mCAECC,EAAqB,WAChC,OAAOF,EAAAA,GAAAA,IAAA,uCAA0CC,IAAOE,MAAK,SAAAC,GAC3D,OAAOA,EAAIC,KAAKC,OACjB,GACF,EAEYC,EAAoB,SAAAC,GAC/B,OAAOR,EAAAA,GAAAA,IAAA,kBAAqBQ,EAArB,oBAAmCP,IAAOE,MAAK,SAAAC,GACpD,OAAOA,EAAIC,IACZ,GACF,EAEYI,EAAiB,SAAAD,GAC5B,OAAOR,EAAAA,GAAAA,IAAA,kBAAqBQ,EAArB,4BAA2CP,IAAOE,MAAK,SAAAC,GAC5D,OAAOA,EAAIC,KAAKK,IACjB,GACF,EAEYC,EAAoB,SAAAH,GAC/B,OAAOR,EAAAA,GAAAA,IAAA,kBAAqBQ,EAArB,4BAA2CP,IAAOE,MAAK,SAAAC,GAC5D,OAAOA,EAAIC,KAAKC,OACjB,GACF,EAEYM,EAAc,SAAAC,GACzB,OAAOb,EAAAA,GAAAA,IAAA,iCAAoCC,EAApC,kBAAiDY,IAASV,MAAK,SAAAC,GACpE,OAAOA,EAAIC,KAAKC,OACjB,GACF,C,kJC9BYQ,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,yGAOVE,EAAgBF,EAAAA,GAAAA,IAAH,qGAMbG,EAAYH,EAAAA,GAAAA,IAAH,gDAITI,EAAUJ,EAAAA,GAAAA,IAAH,gFAKPK,EAAOL,EAAAA,GAAAA,GAAH,uFAMJM,GAAON,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,qH,SCiDjB,EApEoB,WAAO,IAAD,IACxB,GAA0BO,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAMnD,IAJAC,EAAAA,EAAAA,YAAU,YACR1B,EAAAA,EAAAA,IAAkBkB,GAAStB,KAAKqB,EACjC,GAAE,CAACC,IAECF,EAAL,CAIA,IACEW,EAOEX,EAPFW,MACAC,EAMEZ,EANFY,YACAC,EAKEb,EALFa,eACAC,EAIEd,EAJFc,aACAC,EAGEf,EAHFe,aACAC,EAEEhB,EAFFgB,SACAC,EACEjB,EADFiB,OAGF,OACE,6BACE,SAAC1B,EAAD,CAAY2B,GAAIZ,EAAYa,QAA5B,6BACA,UAACzB,EAAD,YACE,0BACE,gBACE0B,MAAO,CAAEC,YAAa,IACtBC,IAAG,0CAAqCV,GACxCW,IAAKV,EACLW,MAAM,aAGV,UAAC7B,EAAD,YACE,0BACGgB,EADH,KACYG,EAAaW,MAAM,EAAG,GADlC,QAGA,oCAAYV,EAAaW,QAAQ,OACjC,sCACA,uBAAIV,KACJ,oCACA,uBAAIC,EAAOU,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,cAG7C,UAAClC,EAAD,YACE,kDACA,UAACC,EAAD,YACE,yBACE,SAACC,EAAD,CAAMoB,GAAI,OAAQE,MAAO,CAAEC,YAAa,IAAxC,qBAIF,yBACE,SAACvB,EAAD,CAAMoB,GAAI,UAAV,8BAIN,SAAC,EAAAa,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAjDL,CAqDF,C","sources":["Api.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst KEY = '438b209afcbf786d00b41cef323b2ca7';\n\nexport const fetchTrendingMovie = () => {\n  return axios.get(`3/trending/movie/day?api_key=${KEY}`).then(res => {\n    return res.data.results;\n  });\n};\n\nexport const fetchSearchMovies = id => {\n  return axios.get(`3/movie/${id}?api_key=${KEY}`).then(res => {\n    return res.data;\n  });\n};\n\nexport const fetchMovieCast = id => {\n  return axios.get(`3/movie/${id}/credits?api_key=${KEY}`).then(res => {\n    return res.data.cast;\n  });\n};\n\nexport const fetchMovieReviews = id => {\n  return axios.get(`3/movie/${id}/reviews?api_key=${KEY}`).then(res => {\n    return res.data.results;\n  });\n};\n\nexport const fetchMovies = query => {\n  return axios.get(`3/search/movie?api_key=${KEY}&query=${query}`).then(res => {\n    return res.data.results;\n  });\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ButtonBack = styled(NavLink)`\n  color: #000000;\n  font-weight: 500;\n  cursor: hand;\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfoWrap = styled.div`\n  display: flex;\n  border-bottom: 1px solid black;\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfo = styled.div`\n  margin-bottom: 16px;\n`;\n\nexport const AddInfo = styled.div`\n  font-weight: 700;\n  border-bottom: 1px solid black;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const Link = styled(NavLink)`\n  color: #000000;\n  font-weight: 700;\n  cursor: hand;\n  &.active {\n    color: red;\n  }\n`;\n","import { fetchSearchMovies } from 'Api';\nimport { useEffect, useState, useRef, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport {\n  ButtonBack,\n  MovieInfoWrap,\n  MovieInfo,\n  AddInfo,\n  List,\n  Link,\n} from './MovieDetails.styled';\n\nconst MovieDetail = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieID } = useParams();\n  const location = useLocation();\n\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    fetchSearchMovies(movieID).then(setMovie);\n  }, [movieID]);\n\n  if (!movie) {\n    return;\n  }\n\n  const {\n    title,\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movie;\n\n  return (\n    <main>\n      <ButtonBack to={backLinkRef.current}>Back to movies</ButtonBack>\n      <MovieInfoWrap>\n        <div>\n          <img\n            style={{ marginRight: 20 }}\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt={original_title}\n            width=\"200px\"\n          />\n        </div>\n        <MovieInfo>\n          <h2>\n            {title} ({release_date.slice(0, 4)})\n          </h2>\n          <p>Rating: {vote_average.toFixed(2)}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres.map(genre => genre.name).join(' ')}</p>\n        </MovieInfo>\n      </MovieInfoWrap>\n      <AddInfo>\n        <p>Additional iformation</p>\n        <List>\n          <li>\n            <Link to={'cast'} style={{ marginRight: 20 }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to={'reviews'}>Reviews</Link>\n          </li>\n        </List>\n      </AddInfo>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetail;\n"],"names":["axios","KEY","fetchTrendingMovie","then","res","data","results","fetchSearchMovies","id","fetchMovieCast","cast","fetchMovieReviews","fetchMovies","query","ButtonBack","styled","NavLink","MovieInfoWrap","MovieInfo","AddInfo","List","Link","useState","movie","setMovie","movieID","useParams","location","useLocation","backLinkRef","useRef","state","from","useEffect","title","poster_path","original_title","release_date","vote_average","overview","genres","to","current","style","marginRight","src","alt","width","slice","toFixed","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}